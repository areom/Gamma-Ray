#!/bin/bash

# These are things that are just program dependent (Scanner v Parser, etc)
program="$( basename "$0" )"
tmpfile="test/check"
tmperr="test/err"
testdir="test/tests"
exe=
old=

# Arguments
save=
verbose=
pattern=

# Calculated values change in each iteration
current=
results=

# Don't change per iteration
maxlength=0
oneline=0
files=

# Formatting values
bold=`tput bold`
normal=`tput sgr0`
uline=`tput smul`
green=`tput setaf 2`
red=`tput setaf 1`


function errWith {
  echo "$1" >& 2
  exit 1
}

function execerror {
  echo "${bold}${uline}${red}ERROR${normal} $1"
}

function dots {
  len=`echo "$current" | wc -c`
  for i in `seq $len $maxlength` ; do
    echo -n '.'
  done
  echo -n ' '
}

function testit {
  testing="${bold}Testing:${normal} ${uline}${current}${normal}"
  test "$oneline" -eq 0 && echo "$testing"
  test "$oneline" -ne 0 && echo -n "$testing"
  test "$oneline" -ne 0 && dots
  test -n "$verbose" && cat "$1"
  cat "$1" | "$exe" 1> "$tmpfile" 2> "$tmperr"
  if [ $? -ne 0 ] ; then
    execerror "Error testing $program with $current"
    cat "$tmperr"
  elif [ -n "$save" ] ; then
    echo "${bold}Saving${normal} $current"
    mv "$tmpfile" "$results"
  elif [ ! -e "$results" ] ; then
    execerror "Cannot check results -- standard does not exist"
  else
    if [ -n "$verbose" ] ; then
      echo -n "${bold}Output:${normal} "
      cat "$tmpfile"
    fi
    test "$oneline" -eq 0 && echo -n "${bold}Results:${normal} "
    diff -q "$tmpfile" "$results" &> /dev/null
    if [ $? -eq 0 ] ; then
      echo "${bold}${green}PASS${normal}"
    else
      echo "${bold}${red}FAIL${normal}"
    fi
    rm "$tmpfile"
  fi
  rm "$tmperr"
  test "$oneline" -eq 0 && echo ""
}

case "$program" in
  scanner)
        exe="./streams"
        old="expect-scanner"
        ;;
  parser)
        exe="./inspect"
        old="expect-parser"
        ;;
  *)
        errWith "Unknown test program $program"
        ;;
esac

while getopts "lsvp:" OPTION ; do
  case "$OPTION" in
    s) save=1 ;;
    v) verbose=1 ;;
    p) pattern=$OPTARG ;;
    l) ls "$testdir" ; exit 0 ;;
    ?) errWith "Unknown option; aborting" ;;
  esac
done
shift $(($OPTIND - 1))

test -e "$exe" || errWith "Testing $program but $exe unavailable"
test -f "$exe" || errWith "Testing $program but $exe is not a file"
test -x "$exe" || errWith "Testing $program but $exe unexecutable"

test -z "$save" && test -z "$verbose" && oneline=1

if [ -n "$pattern" ] ; then
  files="$( find "$testdir" -maxdepth 1 -name "${pattern}" )"
  test -z "$files" && errWith "No files match the given pattern. Good-bye."
else
  files="${testdir}/*"
fi

for atest in "$files" ; do
  current="$( basename "$atest" )"
  len=`echo "$current" | wc -c`
  test $len -gt $maxlength && maxlength="$len"
done
maxlength=$(( maxlength + 5 ))

for atest in "$files" ; do
  current="$( basename "$atest" )"
  results="test/$old/$current"
  testit "$atest"
done

